{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://jw387.com/schemas/shader-desc.schema.json",
  "title": "Shader description",
  "description": "A schema for describing a vulkan shader in json",
  "type": "object",
  "properties": {
    "shader_stage": {
      "enum": [
        "Vertex",
        "Fragment"
      ]
    },
    "structures": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/structure"
      }
    },
    "inputs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "input_name": {
            "type": "string"
          },
          "glsl_type": {
            "$ref": "#/definitions/glsl_type"
          },
          "location": {
            "type": "number"
          },
          "modifiers": {
          }
        },
        "required": [
          "input_name",
          "glsl_type",
          "location"
        ]
      }
    },
    "outputs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "output_name": {
            "type": "string"
          },
          "glsl_type": {
            "$ref": "#/definitions/glsl_type"
          },
          "location": {
            "type": "number"
          },
          "modifiers": {
            "enum": ["flat"]
          }
        },
        "required": [
          "output_name",
          "glsl_type",
          "location"
        ]
      }
    },
    "buffer_blocks": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "block_name": {
            "type": "string"
          },
          "instance_name": {
            "type": "string"
          },
          "buffer_type": {
            "enum": [
              "uniform",
              "storage"
            ]
          },
          "dynamic": {
            "type": "boolean"
          },
          "binding": {
            "type": "number"
          },
          "set": {
            "type": "number"
          },
          "members": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "properties": {
                    "structure_type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "structure_type"
                  ]
                },
                {
                  "properties": {
                    "member_name": {
                      "type": "string"
                    },
                    "member_type": {
                      "type": "object",
                      "$ref": "#/definitions/glsl_type"
                    },
                    "member_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "member_name",
                    "member_type",
                    "member_count"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "block_name",
          "instance_name",
          "buffer_type",
          "dynamic",
          "binding",
          "set",
          "members"
        ]
      }
    },
    "images": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "binding": {
            "type": "number"
          },
          "set": {
            "type": "number"
          },
          "image_name": {
            "type": "string"
          },
          "image_type": {
            "enum": [
              "1D",
              "2D",
              "3D"
            ]
          },
          "image_count": {
            "type": "number"
          }
        },
        "required": [
          "binding",
          "set",
          "image_name",
          "image_type",
          "image_count"
        ]
      }
    },
    "samplers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "binding": {
            "type": "number"
          },
          "set": {
            "type": "number"
          },
          "sampler_name": {
            "type": "string"
          },
          "sampler_count": {
            "type": "number"
          }
        },
        "required": [
          "set",
          "binding",
          "sampler_name",
          "sampler_count"
        ]
      }
    },
    "input_attachments": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "constants": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "constant_name": {
            "type": "string"
          },
          "specialization_id": {
            "type": "number"
          },
          "glsl_type": {
            "$ref": "#/definitions/glsl_type"
          }
        },
        "required": [
          "constant_name",
          "glsl_type"
        ]
      }
    },
    "push_constants": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "constant_name": {
            "type": "string"
          },
          "glsl_type": {
            "$ref": "#/definitions/glsl_type"
          },
          "offset": {
            "type": "number"
          }
        },
        "required": [
          "constant_name",
          "glsl_type",
          "offset"
        ]
      }
    }
  },
  "required": [
    "shader_stage",
    "structures",
    "inputs",
    "outputs",
    "buffer_blocks",
    "images",
    "samplers",
    "input_attachments",
    "push_constants",
    "constants"
  ],
  "definitions": {
    "structure": {
      "type": "object",
      "properties": {
        "struct_name": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "struct_member": {
              "type": "object",
              "properties": {
                "member_name": {
                  "type": "string"
                },
                "member_type": {
                  "$ref": "#/definitions/glsl_type"
                },
                "element_count": {
                  "type": "number"
                }
              },
              "required": [
                "member_name",
                "member_type",
                "element_count"
              ]
            }
          }
        }
      },
      "required": [
        "struct_name",
        "members"
      ]
    },
    "glsl_type": {
      "enum": [
        "bool",
        "int",
        "uint",
        "float",
        "double",
        "vec2",
        "vec3",
        "vec4",
        "mat2",
        "mat3",
        "mat4"
      ]
    }
  }
}